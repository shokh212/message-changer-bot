import telegram
from telegram.ext import Updater, CommandHandler
import schedule
import time

# Замените YOUR_TOKEN на токен вашего бота
TOKEN = '6209915974:AAGFDIxSqxIXQKcbCSTrrPzXX8DBIOiDQt4'

# Создайте экземпляр бота
bot = telegram.Bot(token=TOKEN)

# Функция для смены ссылки (юзернейма) канала/группы
def change_username():
    # Замените CHANNEL_ID на ID вашего канала/группы
    channel_id = 'CHANNEL_ID'
    # Замените NEW_USERNAME на новый юзернейм
    new_username = 'NEW_USERNAME'
    
    # Изменение юзернейма канала/группы
    bot.setChatUsername(chat_id=channel_id, username=new_username)

# Функция для удаления постов
def delete_posts():
    # Замените CHANNEL_ID на ID вашего канала/группы
    channel_id = 'CHANNEL_ID'
    
    # Получение списка сообщений в канале/группе
    messages = bot.getChatHistory(chat_id=channel_id)
    
    # Удаление каждого сообщения
    for message in messages:
        bot.deleteMessage(chat_id=channel_id, message_id=message.message_id)

# Функция для публикации нового поста
def publish_post():
    # Замените CHANNEL_ID на ID вашего канала/группы
    channel_id = 'CHANNEL_ID'
    # Замените MESSAGE_TEXT на текст нового поста
    message_text = 'MESSAGE_TEXT'
    
    # Отправка нового сообщения в канал/группу
    bot.sendMessage(chat_id=channel_id, text=message_text)

# Функция для запуска расписания
def run_schedule():
    schedule.run_pending()
    time.sleep(1)

# Функция для запуска бота
def start_bot():
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    # Команда для запуска расписания
    dp.add_handler(CommandHandler("start", run_schedule))

    updater.start_polling()
    updater.idle()

# Добавление задач в расписание
schedule.every().day.at("12:00").do(change_username)
schedule.every().day.at("12:05").do(delete_posts)
schedule.every().day.at("12:10").do(publish_post)

# Запуск бота
start_bot()
